/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.quanlythuvien;

import static com.mycompany.quanlythuvien.SinhvienModify.checkMsvExists;
import static com.mycompany.quanlythuvien.SinhvienModify.checkMsvExistsInPhieuMuon;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.NumberFormat;
import java.time.LocalDate;
import java.time.YearMonth;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author khang
 */
public class quanlithuvienap extends javax.swing.JFrame {
    
    DefaultTableModel model;
    DefaultTableModel model1;
    DefaultTableModel model2;
    
     private DefaultPieDataset pieDataset;
    private JFreeChart pieChart;
    private PiePlot piePlot;
    private ChartPanel chartPanel;
    private javax.swing.JButton closeButton;
  
       
    List<Sinhvien> sinhvienList = new ArrayList<>();
    List<Sach> sachList = new ArrayList<>();
    List<Phieumuon> phieumuonList = new ArrayList<>();
   
    public quanlithuvienap() {
        initComponents();
         model = (DefaultTableModel) hienthi.getModel();
        model1 = (DefaultTableModel) hienthi2.getModel();
        model2 = (DefaultTableModel) hienthi3.getModel();
        
     showSinhvien();
        showSach();
          showPhieumuon();
    }

     private void showSinhvien(){
         sinhvienList = SinhvienModify.findAll();
        model1.setRowCount(0);
        for(Sinhvien sinhvien : sinhvienList){
            model1.addRow(new Object[] {model1.getRowCount()+1,
            sinhvien.getMsv(),
            sinhvien.getTensv(),
            sinhvien.getDiachi(),
            sinhvien.getSdt(),
            sinhvien.getEmail()} );
        }
    }
     
     
  private void showPhieumuon() {
    phieumuonList = PhieumuonModify.findAll();
    model2.setRowCount(0);
    for (Phieumuon phieumuon : phieumuonList) {
        Sinhvien sinhvien = SinhvienModify.findSinhvienById(phieumuon.getMsv_muon());
        Sach sach = SachModify.findSachById(phieumuon.getId_sach());
        model2.addRow(new Object[]{
            model2.getRowCount() + 1,
            phieumuon.getMaphieumuon(),
            phieumuon.getMsv_muon(),
            sinhvien.getTensv(),
            phieumuon.getId_sach(),
            sach.getTensach(),
            phieumuon.getNgaymuon(),
            phieumuon.getNgayphaitra(),
            phieumuon.getNgaytra(),
            phieumuon.getSongaymuon(),
            phieumuon.getTrangthaimuon()
        });
    }
}

     
       private void showSach(){
         sachList = SachModify.findAll();
        model.setRowCount(0);
        for(Sach sach : sachList){
            model.addRow(new Object[] {model.getRowCount()+1,
            sach.getId(),
            sach.getTensach(),
            sach.getTacgia(),
            sach.getTheloai(),
            sach.getSoluong(),
           } );
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hienthibandoc = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        txtMsv = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        txtTensv = new javax.swing.JTextField();
        txtDiachi = new javax.swing.JTextField();
        txtSdt = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        btnThem4 = new javax.swing.JButton();
        btnSua4 = new javax.swing.JButton();
        btnLuu4 = new javax.swing.JButton();
        btnXoa4 = new javax.swing.JButton();
        btnHuy4 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        hienthi2 = new javax.swing.JTable();
        btntim2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtTensach = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtTacgia = new javax.swing.JTextField();
        txtTheloai = new javax.swing.JTextField();
        txtSoluong = new javax.swing.JTextField();
        btnThem1 = new javax.swing.JButton();
        btnSua1 = new javax.swing.JButton();
        btnLuu1 = new javax.swing.JButton();
        btnXoa1 = new javax.swing.JButton();
        btnHuy1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        hienthi = new javax.swing.JTable();
        btnTim1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMsvm = new javax.swing.JTextField();
        txtMsm = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        hienthi3 = new javax.swing.JTable();
        btnthem3 = new javax.swing.JButton();
        btnsua3 = new javax.swing.JButton();
        btnluu3 = new javax.swing.JButton();
        btnxoa3 = new javax.swing.JButton();
        btnTrasach = new javax.swing.JButton();
        btntim3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        btn_tilequahan = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btn_sachcontrongkho = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        btn_sachmuontrongngay = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        btn_sachduocmuontrongthang = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        btn_top3 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        btn_top330 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1270, 660));
        setResizable(false);

        hienthibandoc.setForeground(new java.awt.Color(0, 0, 255));

        jPanel4.setBackground(new java.awt.Color(255, 0, 0));

        jPanel8.setBackground(new java.awt.Color(255, 153, 0));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel22.setText("Mã Sinh Viên :");

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel23.setText("Họ và Tên :");

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setText("Địa Chỉ :");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel25.setText("Số Điện Thoại :");

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel26.setText("Email :");

        txtDiachi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiachiActionPerformed(evt);
            }
        });

        btnThem4.setText("Thêm");
        btnThem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThem4ActionPerformed(evt);
            }
        });

        btnSua4.setText("Sửa");
        btnSua4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSua4ActionPerformed(evt);
            }
        });

        btnLuu4.setText("Lưu");
        btnLuu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuu4ActionPerformed(evt);
            }
        });

        btnXoa4.setText("Xóa");
        btnXoa4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa4ActionPerformed(evt);
            }
        });

        btnHuy4.setText("Hủy");
        btnHuy4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuy4ActionPerformed(evt);
            }
        });

        hienthi2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã Sinh Viên", "Họ và Tên", "Địa Chỉ", "Số Điện Thoại", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(hienthi2);

        btntim2.setText("Tra cứu");
        btntim2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntim2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThem4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnSua4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnLuu4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnXoa4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnHuy4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btntim2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(266, 266, 266))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTensv, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMsv, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiachi, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMsv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTensv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDiachi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSdt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem4)
                    .addComponent(btnSua4)
                    .addComponent(btnLuu4)
                    .addComponent(btnXoa4)
                    .addComponent(btnHuy4)
                    .addComponent(btntim2))
                .addContainerGap(106, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 23, Short.MAX_VALUE))
        );

        hienthibandoc.addTab("Quản lý bạn đọc", jPanel4);

        jPanel6.setBackground(new java.awt.Color(255, 153, 0));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Tên Sách :");

        txtTensach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTensachActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setText("Tác Giả :");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setText("Thể Loại :");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("Số Lượng :");

        txtSoluong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSoluongActionPerformed(evt);
            }
        });

        btnThem1.setText("Thêm");
        btnThem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThem1ActionPerformed(evt);
            }
        });

        btnSua1.setText("Sửa");
        btnSua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSua1ActionPerformed(evt);
            }
        });

        btnLuu1.setText("Lưu");
        btnLuu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuu1ActionPerformed(evt);
            }
        });

        btnXoa1.setText("Xóa");
        btnXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa1ActionPerformed(evt);
            }
        });

        btnHuy1.setText("Hủy");
        btnHuy1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuy1ActionPerformed(evt);
            }
        });

        hienthi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Id", "Tên Sách", "Tác Giả", "Thể Loại", "Số Lượng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hienthi.setShowGrid(false);
        jScrollPane4.setViewportView(hienthi);

        btnTim1.setText("Tra cứu");
        btnTim1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTim1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 923, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTacgia, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTensach, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTheloai, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSoluong, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(301, 301, 301)
                        .addComponent(btnThem1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLuu1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHuy1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTim1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(223, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTensach))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtTacgia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTheloai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSoluong))
                .addGap(40, 40, 40)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem1)
                    .addComponent(btnSua1)
                    .addComponent(btnTim1)
                    .addComponent(btnHuy1)
                    .addComponent(btnLuu1)
                    .addComponent(btnXoa1))
                .addContainerGap(109, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 25, Short.MAX_VALUE))
        );

        hienthibandoc.addTab("Quản lý sách", jPanel2);

        jPanel5.setBackground(new java.awt.Color(255, 153, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Mã Sinh Viên :");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Mã Sách Mượn :");

        txtMsvm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMsvmActionPerformed(evt);
            }
        });

        hienthi3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã Mượn", "Mã Sinh Viên", "Tên Sinh Viên", "Mã Sách Mượn", "Tên Sách", "Ngày Mượn", "Hạn Trả Sách", "Ngày Trả", "Số Ngày Mượn", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(hienthi3);

        btnthem3.setText("Thêm");
        btnthem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthem3ActionPerformed(evt);
            }
        });

        btnsua3.setText("Chọn");
        btnsua3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsua3ActionPerformed(evt);
            }
        });

        btnluu3.setText("Lưu");
        btnluu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnluu3ActionPerformed(evt);
            }
        });

        btnxoa3.setText("Xóa");
        btnxoa3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoa3ActionPerformed(evt);
            }
        });

        btnTrasach.setText("Trả Sách");
        btnTrasach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrasachActionPerformed(evt);
            }
        });

        btntim3.setText("Tra Cứu");
        btntim3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntim3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1097, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(284, 284, 284)
                .addComponent(btnthem3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnsua3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnluu3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(btnxoa3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnTrasach, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btntim3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtMsm)
                    .addComponent(txtMsvm, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMsvm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(txtMsm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addGap(43, 43, 43)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnthem3)
                    .addComponent(btnxoa3)
                    .addComponent(btnTrasach)
                    .addComponent(btntim3)
                    .addComponent(btnluu3)
                    .addComponent(btnsua3))
                .addContainerGap(234, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        hienthibandoc.addTab("Quản lý mượn", jPanel1);

        jPanel3.setBackground(new java.awt.Color(255, 153, 0));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setText("Thống Kê Số Liệu");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        btn_tilequahan.setText("Tỉ lệ quá hạn");
        btn_tilequahan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tilequahanActionPerformed(evt);
            }
        });

        jLabel3.setText("Tỉ lệ trả sách quá hạn");

        btn_sachcontrongkho.setText("Sách còn trong kho");
        btn_sachcontrongkho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sachcontrongkhoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel4.setText("Tỉ lệ sách đang được mượn");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel5.setText("Tỉ lệ sách được mượn trong ngày");

        btn_sachmuontrongngay.setText("Sách Mượn trong ngày");
        btn_sachmuontrongngay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sachmuontrongngayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel6.setText("Số lượng sách được mượn trong 3 tháng gần nhất");

        btn_sachduocmuontrongthang.setText("Sách được mượn trong tháng");
        btn_sachduocmuontrongthang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sachduocmuontrongthangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        jLabel8.setText("Top 3 sách được mượn nhiều nhất trong ngày ");

        btn_top3.setText("Top3");
        btn_top3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_top3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        btn_top330.setText("Top 3 tháng");
        btn_top330.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_top330ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(19, 19, 19)
                                    .addComponent(btn_tilequahan))))
                        .addGap(79, 79, 79)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_sachcontrongkho)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(493, 493, 493)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_sachmuontrongngay))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(97, 97, 97)
                                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(88, 88, 88)
                                        .addComponent(btn_sachduocmuontrongthang)))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(166, 166, 166))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32)
                            .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btn_top3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_top330)
                        .addGap(65, 65, 65))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_tilequahan)
                    .addComponent(btn_sachcontrongkho)
                    .addComponent(btn_sachmuontrongngay)
                    .addComponent(btn_sachduocmuontrongthang)
                    .addComponent(btn_top3)
                    .addComponent(btn_top330))
                .addContainerGap(288, Short.MAX_VALUE))
        );

        hienthibandoc.addTab("Thống kê", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(hienthibandoc, javax.swing.GroupLayout.PREFERRED_SIZE, 1259, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hienthibandoc, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btntim3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntim3ActionPerformed
        // TODO add your handling code here:
        String input = JOptionPane.showInputDialog(this, "Nhập mã sinh viên để tìm kiếm");
        if(input != null && input.length()>0){
            phieumuonList = PhieumuonModify.findByFullnameAndStatus(input);
            model2.setRowCount(0);
            if (phieumuonList.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy sách");
                showPhieumuon(); // Hiển thị lại toàn bộ danh sách sinh viên
            } else {
                model2.setRowCount(0);
                for (Phieumuon phieumuon : phieumuonList) {
                    Sinhvien sinhvien = SinhvienModify.findSinhvienById(phieumuon.getMsv_muon());
                    Sach sach = SachModify.findSachById(phieumuon.getId_sach());
                    model2.addRow(new Object[]{
                        model2.getRowCount() + 1,
                        phieumuon.getMaphieumuon(),
                        sinhvien.getMsv(),
                sinhvien.getTensv(),
                phieumuon.getId_sach(),
                sach.getTensach(),
                phieumuon.getNgaymuon(),
                    phieumuon.getNgayphaitra(),
                 phieumuon.getNgaytra(),
                  phieumuon.getSongaymuon(),
                 phieumuon.getTrangthaimuon()
                    });
                }
            }
        }else{
            showPhieumuon();
        }
    }//GEN-LAST:event_btntim3ActionPerformed

    private void btnTrasachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrasachActionPerformed
        // TODO add your handling code here:
        int selectedIndex = hienthi3.getSelectedRow();
        if (selectedIndex >= 0) {
            Phieumuon std = phieumuonList.get(selectedIndex);
            int old_id_sach = std.getId_sach();

            // Kiểm tra xem sinh viên đã mượn sách mới hay chưa

            int option = JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn lưu và cập nhật dữ liệu?");
            if (option == JOptionPane.YES_OPTION) {
                std.setTrangthaimuon("DaTra");

                // Tăng số lượng sách của id_sach cũ lên 1
                SachModify.increaseQuantity(old_id_sach);
            }

            PhieumuonModify.updatetra(std);

            showPhieumuon();
            showSach();
            // Đặt các trường về giá trị mặc định sau khi lưu thành công (tuỳ vào yêu cầu của bạn)
            txtMsvm.setText("");
            txtMsm.setText("");

        }
    }//GEN-LAST:event_btnTrasachActionPerformed

    private void btnxoa3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoa3ActionPerformed
        // TODO add your handling code here:
        int selectedIndex = hienthi3.getSelectedRow();
        if (selectedIndex >= 0) {
            Phieumuon std = phieumuonList.get(selectedIndex);
            int option = JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn xóa dữ liệu này?");
            System.out.println("option: " + option);
            if (option == 0) {
                int id_sach = std.getId_sach();
                PhieumuonModify.delete(std.getMaphieumuon());
                SachModify.increaseQuantity(id_sach);
                showPhieumuon();
                showSach();
            }
        }
    }//GEN-LAST:event_btnxoa3ActionPerformed

    private void btnluu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnluu3ActionPerformed
        // TODO add your handling code here:
        String msv_muon = txtMsvm.getText();
        int new_id_sach = Integer.parseInt(txtMsm.getText());
        String trangthaimuon = "DangMuon";

        int selectedIndex = hienthi3.getSelectedRow();
        if (selectedIndex >= 0) {
            Phieumuon std = phieumuonList.get(selectedIndex);
            int old_id_sach = std.getId_sach();
            String old_msv_muon = std.getMsv_muon();
            String old_trangthaimuon = std.getTrangthaimuon();

            boolean foundMatch = false;

            for (Phieumuon pm : phieumuonList) {
                if (pm.getMsv_muon().equals(msv_muon) && pm.getId_sach() == new_id_sach && pm.getTrangthaimuon().equals(trangthaimuon)) {
                    foundMatch = true;
                    break;
                }
            }

            if (foundMatch) {
                JOptionPane.showMessageDialog(this, "Bạn đang mượn sách này. Không thể sửa phiếu mượn.");
            } else {
                int option = JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn lưu và cập nhật dữ liệu?");
                if (option == JOptionPane.YES_OPTION) {
                    if (new_id_sach != old_id_sach) {
                        // Tăng số lượng sách của id_sach cũ lên 1
                        SachModify.increaseQuantity(old_id_sach);
                        // Giảm số lượng sách của id_sach mới đi 1
                        SachModify.decreaseQuantity(new_id_sach);
                    }

                    std.setMsv_muon(msv_muon);
                    std.setId_sach(new_id_sach);

                    PhieumuonModify.update(std);

                    showPhieumuon();
                    showSach();
                    // Đặt các trường về giá trị mặc định sau khi lưu thành công (tuỳ vào yêu cầu của bạn)
                    txtMsvm.setText("");
                    txtMsm.setText("");

                }
            }
        }
    }//GEN-LAST:event_btnluu3ActionPerformed

    private void btnsua3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsua3ActionPerformed
        // TODO add your handling code here:
        int selectedIndex = hienthi3.getSelectedRow();
        if (selectedIndex >= 0) {
            Phieumuon std = phieumuonList.get(selectedIndex);

            int option = JOptionPane.showConfirmDialog(this, "Bạn muốn chọn dữ liệu này để sửa?");
            System.out.println("option: " + option);
            if (option == JOptionPane.YES_OPTION) {
                txtMsvm.setText(std.getMsv_muon());
                txtMsm.setText(Integer.toString(std.getId_sach()));

            }
        }
    }//GEN-LAST:event_btnsua3ActionPerformed

    private void btnthem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthem3ActionPerformed

        // TODO add your handling code here:
        String msv_muon = txtMsvm.getText();
        int id_sach = Integer.parseInt(txtMsm.getText());

        Sach sach = SachModify.findSachById(id_sach);
        Sinhvien sv = SinhvienModify.findSinhvienById(msv_muon);

        if (sach == null) {
            JOptionPane.showMessageDialog(this, "Sách không tồn tại");
        } else if (sv == null) {
            JOptionPane.showMessageDialog(this, "Mã sinh viên không tồn tại");
        } else if (sach.getSoluong() == 0) {
            JOptionPane.showMessageDialog(this, "Số lượng sách đã hết");
        } else {
            boolean isDangMuon = PhieumuonModify.isStatusDangMuon(msv_muon, id_sach);

            if (isDangMuon) {
                JOptionPane.showMessageDialog(this, "Sách đã được mượn, không thể mượn tiếp");
            } else {
                String trangthaimuon = "DangMuon";
                LocalDate currentDate = LocalDate.now();
                Date ngaymuon = Date.valueOf(currentDate);

                // Kiểm tra xem đã tồn tại phiếu mượn trùng msv_muon, id_sach và trangthaimuon "DangMuon" chưa
                boolean isExistingLoan = PhieumuonModify.checkExistingLoan1(msv_muon, id_sach, trangthaimuon);

                if (isExistingLoan) {
                    JOptionPane.showMessageDialog(this, "Bạn đang mượn sách này, không thể mượn tiếp");
                } else {
                    boolean isInserted = PhieumuonModify.insert(msv_muon, id_sach, ngaymuon, trangthaimuon);

                    if (isInserted) {
                        // Giảm số lượng sách đi 1
                        sach.setSoluong(sach.getSoluong() - 1);
                        SachModify.update(sach);
                        showSach();
                        showPhieumuon();
                        txtMsvm.setText("");
                        txtMsm.setText("");
                    } else {
                        JOptionPane.showMessageDialog(this, "Không thể thêm phiếu mượn");
                    }
                }
            }
        }
    }//GEN-LAST:event_btnthem3ActionPerformed

    private void txtMsvmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMsvmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMsvmActionPerformed

    private void btnTim1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTim1ActionPerformed
        // TODO add your handling code here:
        String input = JOptionPane.showInputDialog(this, "Nhập tên sách để tìm kiếm");
        if(input != null && input.length()>0){
            sachList = SachModify.findByFullname(input);
            model.setRowCount(0);
            if (sachList.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy sách");
                showSach(); // Hiển thị lại toàn bộ danh sách sinh viên
            } else {
                model.setRowCount(0);
                for (Sach sach : sachList) {
                    model.addRow(new Object[] {
                        hienthi.getRowCount() + 1,
                        sach.getId(),
                        sach.getTensach(),
                        sach.getTacgia(),
                        sach.getTheloai(),
                        sach.getSoluong()
                    });
                }
            }
        }else{
            showSach();
        }
    }//GEN-LAST:event_btnTim1ActionPerformed

    private void btnHuy1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuy1ActionPerformed
        // TODO add your handling code here:
        txtTensach.setText("");
        txtTacgia.setText("");
        txtTheloai.setText("");
        txtSoluong.setText("");

    }//GEN-LAST:event_btnHuy1ActionPerformed

    private void btnXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa1ActionPerformed
        // TODO add your handling code here:
        int selectedIndex = hienthi.getSelectedRow();
        if(selectedIndex >=0){
            Sach std = sachList.get(selectedIndex);
            int option = JOptionPane.showConfirmDialog(this, "bạn chắc chắn muốn xóa dữ liệu này?");
            System.out.println("option:" + option);
            if(option == 0) {
                SachModify.delete(std.getId());
                showSach();
            }
        }
    }//GEN-LAST:event_btnXoa1ActionPerformed

    private void btnLuu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuu1ActionPerformed
        // TODO add your handling code here:
        String tensach = txtTensach.getText();
        int soluong = Integer.parseInt(txtSoluong.getText());
        String tacgia = txtTacgia.getText();
        String theloai = txtTheloai.getText();

        int selectedIndex = hienthi.getSelectedRow();
        if (selectedIndex >= 0) {
            Sach std = sachList.get(selectedIndex);
            std.setTensach(tensach);
            std.setSoluong(soluong);
            std.setTacgia(tacgia);
            std.setTheloai(theloai);

            int option = JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn lưu và cập nhật dữ liệu?");
            if (option == JOptionPane.YES_OPTION) {
                SachModify.update(std);
                showSach();
                // Đặt các trường về giá trị mặc định sau khi lưu thành công (tuỳ vào yêu cầu của bạn)
                txtTensach.setText("");
                txtTacgia.setText("");
                txtTheloai.setText("");
                txtSoluong.setText("");
            }
        }
    }//GEN-LAST:event_btnLuu1ActionPerformed

    private void btnSua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSua1ActionPerformed
        // TODO add your handling code here:
        int selectedIndex = hienthi.getSelectedRow();
        if (selectedIndex >= 0) {
            Sach std = sachList.get(selectedIndex);

            int option = JOptionPane.showConfirmDialog(this, "Bạn muốn chọn dữ liệu này để sửa?");
            System.out.println("option: " + option);
            if (option == JOptionPane.YES_OPTION) {
                txtTensach.setText(std.getTensach());
                txtTacgia.setText(std.getTacgia());
                txtTheloai.setText(std.getTheloai());
                txtSoluong.setText(String.valueOf(std.getSoluong()));
            }
        }
    }//GEN-LAST:event_btnSua1ActionPerformed

    private void btnThem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThem1ActionPerformed
        // TODO add your handling code here:
        String tensach = txtTensach.getText();
        int soluong = Integer.parseInt(txtSoluong.getText());
        String tacgia = txtTacgia.getText();
        String theloai = txtTheloai.getText();

        Sach std = new Sach(tensach, tacgia, theloai, soluong);

        SachModify.insert(std);
        showSach();
    }//GEN-LAST:event_btnThem1ActionPerformed

    private void btntim2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntim2ActionPerformed
        // TODO add your handling code here:
        String input = JOptionPane.showInputDialog(this, "Nhập tên sinh viên để tìm");
        if(input != null && input.length()>0){
            sinhvienList = SinhvienModify.findByFullname(input);
            model1.setRowCount(0);
            if (sinhvienList.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy sinh viên");
                showSinhvien(); // Hiển thị lại toàn bộ danh sách sinh viên
            } else {
                model1.setRowCount(0);
                for (Sinhvien sv : sinhvienList) {
                    model1.addRow(new Object[] {
                        hienthi.getRowCount() + 1,
                        sv.getMsv(),
                        sv.getTensv(),
                        sv.getDiachi(),
                        sv.getSdt(),
                        sv.getEmail()
                    });
                }
            }
        }else{
            showSinhvien();
        }
    }//GEN-LAST:event_btntim2ActionPerformed

    private void btnHuy4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuy4ActionPerformed
        // TODO add your handling code here:
        txtMsv.setText("");
        txtTensv.setText("");
        txtDiachi.setText("");
        txtSdt.setText("");
        txtEmail.setText("");
    }//GEN-LAST:event_btnHuy4ActionPerformed

    private void btnXoa4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa4ActionPerformed
        // TODO add your handling code here:
        int selectedIndex = hienthi2.getSelectedRow();
        if(selectedIndex >=0){
            Sinhvien std = sinhvienList.get(selectedIndex);
            int option = JOptionPane.showConfirmDialog(this, "do you want to delete this item?");
            System.out.println("option:" + option);
            if(option == 0) {
                SinhvienModify.delete(std.getMsv());
                showSinhvien();
            }
        }
    }//GEN-LAST:event_btnXoa4ActionPerformed

    private void btnLuu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuu4ActionPerformed
     String msv = txtMsv.getText();
    String tensv = txtTensv.getText();
    String diachi = txtDiachi.getText();
    String sdt = txtSdt.getText();
    String email = txtEmail.getText();

    int selectedIndex = hienthi2.getSelectedRow();
    if (selectedIndex >= 0) {
        Sinhvien std = sinhvienList.get(selectedIndex);

        // Kiểm tra trạng thái mượn sách của sinh viên
        if (checkMsvExistsInPhieuMuon(msv)) {
            JOptionPane.showMessageDialog(this, "Mã sinh viên đã mượn sách và không thể sửa!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        std.setTensv(tensv);
        std.setDiachi(diachi);
        std.setSdt(sdt);
        std.setEmail(email);

        int option = JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn lưu và cập nhật dữ liệu?");
        if (option == JOptionPane.YES_OPTION) {
            if (checkMsvExists(msv)) {
                JOptionPane.showMessageDialog(this, "Mã sinh viên đã tồn tại!", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            std.setMsv(msv);
            SinhvienModify.update(std);

            showSinhvien();

            txtMsv.setText("");
            txtTensv.setText("");
            txtDiachi.setText("");
            txtSdt.setText("");
            txtEmail.setText("");
        }
    }
    }//GEN-LAST:event_btnLuu4ActionPerformed

    private void btnSua4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSua4ActionPerformed
         int selectedIndex = hienthi2.getSelectedRow();
    if (selectedIndex >= 0) {
        Sinhvien std = sinhvienList.get(selectedIndex);

        int option = JOptionPane.showConfirmDialog(this, "Bạn muốn chọn dữ liệu này để sửa?");
        if (option == JOptionPane.YES_OPTION) {
            // Lưu giá trị msv ban đầu vào một biến
            String msv = std.getMsv();
            txtMsv.setText(msv);
            txtTensv.setText(std.getTensv());
            txtDiachi.setText(std.getDiachi());
            txtSdt.setText(std.getSdt());
            txtEmail.setText(std.getEmail());
            // Lưu giá trị msv ban đầu vào thuộc tính của đối tượng std
            std.setMsvOriginal(msv);
        }
    }
    }//GEN-LAST:event_btnSua4ActionPerformed

    private void btnThem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThem4ActionPerformed
        // TODO add your handling code here:
        //         String msv = txtMsv.getText();
        //         String tensv = txtTensv.getText();
        //         String diachi = txtDiachi.getText();
        //         String sdt = txtSdt.getText();
        //         String email = txtEmail.getText();
        //        Sinhvien std = new Sinhvien(msv, tensv, diachi, sdt, email);
        //        SinhvienModify.insert(std);
        //        showSinhvien();

        String msv = txtMsv.getText();
        String tensv = txtTensv.getText();
        String diachi = txtDiachi.getText();
        String sdt = txtSdt.getText();
        String email = txtEmail.getText();

        // Kiểm tra msv đã tồn tại hay chưa
        if (SinhvienModify.isMsvExists(msv)) {
            JOptionPane.showMessageDialog(this, "MSV đã tồn tại trong cơ sở dữ liệu.");
        } else {
            Sinhvien std = new Sinhvien(msv, tensv, diachi, sdt, email);
            SinhvienModify.insert(std);
            showSinhvien();
        }

    }//GEN-LAST:event_btnThem4ActionPerformed

    private void txtTensachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTensachActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTensachActionPerformed

    private void txtSoluongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSoluongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSoluongActionPerformed

    private void txtDiachiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiachiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiachiActionPerformed
private boolean chartVisible = false; // Biến cờ để theo dõi trạng thái hiển thị của biểu đồ
    private void btn_tilequahanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tilequahanActionPerformed
  if (chartVisible) { // Nếu biểu đồ đang hiển thị
        jPanel7.remove(chartPanel);
        jPanel7.revalidate();
        jPanel7.repaint();
        chartVisible = false; // Đặt trạng thái hiển thị biểu đồ là false
        btn_tilequahan.setText("Hiển thị biểu đồ"); // Đặt lại nội dung của nút btn_tilequahan
        btn_tilequahan.setPreferredSize(new Dimension(120, 30)); // Đặt lại kích thước của nút btn_tilequahan
        jPanel7.setPreferredSize(new Dimension(150, 150)); // Đặt lại kích thước của jPanel7
    } else { // Nếu biểu đồ không được hiển thị
        DefaultPieDataset dataset = new DefaultPieDataset();

        // Connect to the database
        String url = "jdbc:mysql://localhost:3306/qltvap";
        String username = "root";
        String password = "";
        try (Connection connection = DriverManager.getConnection(url, username, password)) {
            // Execute the query
            String sql = "SELECT COUNT(*) AS total FROM phieumuon WHERE trangthaimuon = 'DaTra'";
            try (Statement statement = connection.createStatement();
                 ResultSet resultSet = statement.executeQuery(sql)) {
                if (resultSet.next()) {
                    int totalRecords = resultSet.getInt("total");

                    // Query for overdue records
                    sql = "SELECT COUNT(*) AS overdue FROM phieumuon WHERE trangthaimuon = 'DaTra' AND songaymuon > 90";
                    try (ResultSet overdueResultSet = statement.executeQuery(sql)) {
                        if (overdueResultSet.next()) {
                            int overdueRecords = overdueResultSet.getInt("overdue");

                            // Calculate the percentage of overdue records
                            double overduePercentage = (double) overdueRecords / totalRecords * 100;

                            // Add data to the dataset
                            dataset.setValue("Quá hạn", overduePercentage);
                            dataset.setValue("Không quá hạn", 100 - overduePercentage);
                        }
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        // Create the chart
        JFreeChart chart = ChartFactory.createPieChart(
                "Tỉ lệ trả sách quá hạn",
                dataset,
                true,
                true,
                false);

        // Get the plot from the chart and cast it to PiePlot
        PiePlot plot = (PiePlot) chart.getPlot();

        // Customize label format
        StandardPieSectionLabelGenerator labelGenerator = new StandardPieSectionLabelGenerator("{0}: {1} ({2})", java.text.NumberFormat.getNumberInstance(), java.text.NumberFormat.getPercentInstance());
        plot.setLabelGenerator(labelGenerator);

        // Customize legend label format
        plot.setLegendLabelGenerator(new StandardPieSectionLabelGenerator("{0} ({2})"));

        // Create the chart panel
        chartPanel = new ChartPanel(chart);

        // Remove previous chart panel (if any)
        jPanel7.removeAll();

        // Add the new chart panel to jPanel7
        jPanel7.setLayout(new BorderLayout());
        jPanel7.add(chartPanel, BorderLayout.CENTER);
        jPanel7.validate();

        chartVisible = true; // Đặt trạng thái hiển thị biểu đồ là true
        btn_tilequahan.setText("Hiển thị biểu đồ"); // Đặt lại nội dung của nút btn_tilequahan
        btn_tilequahan.setPreferredSize(new Dimension(120, 30)); // Đặt lại kích thước của nút btn_tilequahan
        jPanel7.setPreferredSize(new Dimension(150, 150)); // Đặt lại kích thước của jPanel7
    }
    }//GEN-LAST:event_btn_tilequahanActionPerformed

    private boolean chartVisible1 = false; // Biến cờ để theo dõi trạng thái hiển thị của biểu đồ

    private void btn_sachcontrongkhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sachcontrongkhoActionPerformed
        if (chartVisible1) { // Nếu biểu đồ đang hiển thị
        jPanel9.remove(chartPanel);
        jPanel9.revalidate();
        jPanel9.repaint();
        chartVisible1 = false; // Đặt trạng thái hiển thị biểu đồ là false
        btn_sachcontrongkho.setText("Hiển thị biểu đồ"); // Đặt lại nội dung của nút btn_sachcontrongkho
        btn_sachcontrongkho.setPreferredSize(new Dimension(120, 30)); // Đặt lại kích thước của nút btn_sachcontrongkho
        jPanel9.setPreferredSize(new Dimension(150, 150)); // Đặt lại kích thước của jPanel9
    } else { // Nếu biểu đồ không được hiển thị
        DefaultPieDataset dataset = new DefaultPieDataset();

        // Connect to the database
        String url = "jdbc:mysql://localhost:3306/qltvap";
        String username = "root";
        String password = "";
        try (Connection connection = DriverManager.getConnection(url, username, password)) {
            // Execute the query to get the total number of books in stock
            String sql = "SELECT SUM(soluong) AS total FROM sach";
            try (Statement statement = connection.createStatement();
                 ResultSet resultSet = statement.executeQuery(sql)) {
                if (resultSet.next()) {
                    int totalBooks = resultSet.getInt("total");

                    // Query to get the total number of books currently being borrowed
                    sql = "SELECT COUNT(*) AS borrowed FROM phieumuon WHERE trangthaimuon = 'DangMuon'";
                    try (ResultSet borrowedResultSet = statement.executeQuery(sql)) {
                        if (borrowedResultSet.next()) {
                            int borrowedBooks = borrowedResultSet.getInt("borrowed");

                            // Calculate the percentage of borrowed books
                            double borrowedPercentage = (double) borrowedBooks / (borrowedBooks + totalBooks) * 100;
                            double remainingPercentage = 100 - borrowedPercentage;

                            // Add data to the dataset
                            dataset.setValue("Đang mượn", borrowedPercentage);
                            dataset.setValue("Còn trong kho", remainingPercentage);
                        }
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        // Create the chart
        JFreeChart chart = ChartFactory.createPieChart(
                "Tỉ lệ sách được mượn",
                dataset,
                true,
                true,
                false);

        // Get the plot from the chart and cast it to PiePlot
        PiePlot plot = (PiePlot) chart.getPlot();

        // Customize label format
        NumberFormat numberFormat = NumberFormat.getInstance();
        StandardPieSectionLabelGenerator labelGenerator = new StandardPieSectionLabelGenerator("{0}: {1} ({2})", numberFormat, NumberFormat.getPercentInstance());
        plot.setLabelGenerator(labelGenerator);

        // Customize legend label format
        plot.setLegendLabelGenerator(new StandardPieSectionLabelGenerator("{0} ({2})", numberFormat, NumberFormat.getPercentInstance()));

        // Create the chart panel
        chartPanel = new ChartPanel(chart);

        // Remove previous chart panel (if any)
        jPanel9.removeAll();

        // Add the new chart panel to jPanel9
        jPanel9.setLayout(new BorderLayout());
        jPanel9.add(chartPanel, BorderLayout.CENTER);
        jPanel9.validate();

        chartVisible1 = true; // Đặt trạng thái hiển thị biểu đồ là true
        btn_sachcontrongkho.setText("Ẩn biểu đồ"); // Đặt lại nội dung của nút btn_sachcontrongkho
        btn_sachcontrongkho.setPreferredSize(new Dimension(120, 30)); // Đặt lại kích thước của nút btn_sachcontrongkho
        jPanel9.setPreferredSize(new Dimension(150, 150)); // Đặt lại kích thước của jPanel9
    }

    }//GEN-LAST:event_btn_sachcontrongkhoActionPerformed
private boolean chartVisible2 = false; // Biến cờ để theo dõi trạng thái hiển thị của biểu đồ
    private void btn_sachmuontrongngayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sachmuontrongngayActionPerformed
         if (chartVisible2) { // Nếu biểu đồ đang hiển thị
        jPanel10.remove(chartPanel);
        jPanel10.revalidate();
        jPanel10.repaint();
        chartVisible2 = false; // Đặt trạng thái hiển thị biểu đồ là false
        btn_sachmuontrongngay.setText("Hiển thị biểu đồ"); // Đặt lại nội dung của nút btn_sachmuontrongngay
        btn_sachmuontrongngay.setPreferredSize(new Dimension(120, 30)); // Đặt lại kích thước của nút btn_sachmuontrongngay
        jPanel10.setPreferredSize(new Dimension(150, 150)); // Đặt lại kích thước của jPanel9
    } else { // Nếu biểu đồ không được hiển thị
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        // Connect to the database
        String url = "jdbc:mysql://localhost:3306/qltvap";
        String username = "root";
        String password = "";
        try (Connection connection = DriverManager.getConnection(url, username, password)) {
            // Get the current date
            LocalDate currentDate = LocalDate.now();

            // Get the previous date
            LocalDate previousDate = currentDate.minusDays(1);

            // Format the dates as strings
            String currentDateString = currentDate.toString();
            String previousDateString = previousDate.toString();

            // Execute the query to get the number of books borrowed on the current date
            String sql = "SELECT COUNT(*) AS current_count FROM phieumuon WHERE DATE(ngaymuon) = ?";
            try (PreparedStatement statement = connection.prepareStatement(sql)) {
                statement.setString(1, currentDateString);
                try (ResultSet resultSet = statement.executeQuery()) {
                    if (resultSet.next()) {
                        int currentCount = resultSet.getInt("current_count");
                        dataset.addValue(currentCount, "Sách được mượn", "Ngày hiện tại");
                    }
                }
            }

            // Execute the query to get the number of books borrowed on the previous date
            sql = "SELECT COUNT(*) AS previous_count FROM phieumuon WHERE DATE(ngaymuon) = ?";
            try (PreparedStatement statement = connection.prepareStatement(sql)) {
                statement.setString(1, previousDateString);
                try (ResultSet resultSet = statement.executeQuery()) {
                    if (resultSet.next()) {
                        int previousCount = resultSet.getInt("previous_count");
                        dataset.addValue(previousCount, "Sách được mượn", "Ngày trước đó");
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        // Create the chart
        JFreeChart chart = ChartFactory.createBarChart(
                "Tỉ lệ sách được mượn trong ngày",
                "Ngày",
                "Số lượng sách được mượn",
                dataset,
                PlotOrientation.VERTICAL,
                true,
                true,
                false);

        // Create the chart panel
        chartPanel = new ChartPanel(chart);

        // Remove previous chart panel (if any)
        jPanel10.removeAll();

        // Add the new chart panel to jPanel9
        jPanel10.setLayout(new BorderLayout());
        jPanel10.add(chartPanel, BorderLayout.CENTER);
        jPanel10.validate();

        chartVisible2 = true; // Đặt trạng thái hiển thị biểu đồ là true
        btn_sachmuontrongngay.setText("Ẩn biểu đồ"); // Đặt lại nội dung của nút btn_sachmuontrongngay
        btn_sachmuontrongngay.setPreferredSize(new Dimension(120, 30)); // Đặt lại kích thước của nút btn_sachmuontrongngay
        jPanel10.setPreferredSize(new Dimension(150, 150)); // Đặt lại kích thước của jPanel9
    }
    }//GEN-LAST:event_btn_sachmuontrongngayActionPerformed

    private void btn_sachduocmuontrongthangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sachduocmuontrongthangActionPerformed
       if (chartVisible) { // Nếu biểu đồ đang hiển thị
        jPanel11.remove(chartPanel);
        jPanel11.revalidate();
        jPanel11.repaint();
        chartVisible = false; // Đặt trạng thái hiển thị biểu đồ là false
        btn_sachduocmuontrongthang.setText("Hiển thị biểu đồ"); // Đặt lại nội dung của nút btn_sachduocmuontrongthang
        btn_sachduocmuontrongthang.setPreferredSize(new Dimension(120, 30)); // Đặt lại kích thước của nút btn_sachduocmuontrongthang
        jPanel11.setPreferredSize(new Dimension(150, 150)); // Đặt lại kích thước của jPanel9
    } else { // Nếu biểu đồ không được hiển thị
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        // Connect to the database
        String url = "jdbc:mysql://localhost:3306/qltvap";
        String username = "root";
        String password = "";
        try (Connection connection = DriverManager.getConnection(url, username, password)) {
            // Get the current date
            LocalDate currentDate = LocalDate.now();

            // Get the date 3 months before the current date
            LocalDate startDate = currentDate.minusMonths(3);

            // Get the range of months (excluding the current month)
            YearMonth startYearMonth = YearMonth.from(startDate);
            YearMonth endYearMonth = YearMonth.from(currentDate.minusMonths(1));

            // Iterate over the range of months
            YearMonth currentYearMonth = startYearMonth;
            while (!currentYearMonth.isAfter(endYearMonth)) {
                // Format the year-month as string (e.g., "2023-03" for March 2023)
                String yearMonthString = currentYearMonth.toString();

                // Execute the query to get the number of books borrowed in the current month
                String sql = "SELECT COUNT(*) AS count FROM phieumuon WHERE DATE_FORMAT(ngaymuon, '%Y-%m') = ?";
                try (PreparedStatement statement = connection.prepareStatement(sql)) {
                    statement.setString(1, yearMonthString);
                    try (ResultSet resultSet = statement.executeQuery()) {
                        if (resultSet.next()) {
                            int count = resultSet.getInt("count");
                            dataset.addValue(count, "Sách được mượn", yearMonthString);
                        }
                    }
                }

                // Move to the next month
                currentYearMonth = currentYearMonth.plusMonths(1);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        // Create the chart
        JFreeChart chart = ChartFactory.createBarChart(
                "Tỉ lệ sách được mượn trong 3 tháng gần nhất",
                "Tháng",
                "Số lượng sách được mượn",
                dataset,
                PlotOrientation.VERTICAL,
                true,
                true,
                false);

        // Create the chart panel
        chartPanel = new ChartPanel(chart);

        // Remove previous chart panel (if any)
        jPanel11.removeAll();

        // Add the new chart panel to jPanel9
        jPanel11.setLayout(new BorderLayout());
        jPanel11.add(chartPanel, BorderLayout.CENTER);
        jPanel11.validate();

        chartVisible = true; // Đặt trạng thái hiển thị biểu đồ là true
        btn_sachduocmuontrongthang.setText("Ẩn biểu đồ"); // Đặt lại nội dung của nút btn_sachduocmuontrongthang
        btn_sachduocmuontrongthang.setPreferredSize(new Dimension(120, 30)); // Đặt lại kích thước của nút btn_sachduocmuontrongthang
        jPanel11.setPreferredSize(new Dimension(150, 150)); // Đặt lại kích thước của jPanel9
    }
    }//GEN-LAST:event_btn_sachduocmuontrongthangActionPerformed

    private void btn_top3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_top3ActionPerformed
    if (chartVisible) { // Nếu biểu đồ đang hiển thị
        jPanel12.remove(chartPanel);
        jPanel12.revalidate();
        jPanel12.repaint();
        chartVisible = false; // Đặt trạng thái hiển thị biểu đồ là false
        btn_top3.setText("Hiển thị biểu đồ"); // Đặt lại nội dung của nút btn_top3
        btn_top3.setPreferredSize(new Dimension(120, 30)); // Đặt lại kích thước của nút btn_top3
        jPanel12.setPreferredSize(new Dimension(150, 150)); // Đặt lại kích thước của jPanel12
    } else { // Nếu biểu đồ không được hiển thị
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        // Connect to the database
        String url = "jdbc:mysql://localhost:3306/qltvap";
        String username = "root";
        String password = "";
        try (Connection connection = DriverManager.getConnection(url, username, password)) {
            // Get the current date
            LocalDate currentDate = LocalDate.now();

            // Execute the query to get the top 3 most borrowed books on the current date
            String sql = "SELECT p.id_sach, COUNT(*) AS count, s.tensach FROM phieumuon p JOIN sach s ON p.id_sach = s.id WHERE DATE(p.ngaymuon) = ? GROUP BY p.id_sach, s.tensach ORDER BY count DESC LIMIT 3";
            try (PreparedStatement statement = connection.prepareStatement(sql)) {
                statement.setString(1, currentDate.toString());
                try (ResultSet resultSet = statement.executeQuery()) {
                    while (resultSet.next()) {
                        String idSach = resultSet.getString("id_sach");
                        int count = resultSet.getInt("count");
                        String tenSach = resultSet.getString("tensach");
                        dataset.addValue(count, "Số lượng", tenSach);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        // Create the chart
        JFreeChart chart = ChartFactory.createBarChart(
                "Top 3 sách được mượn nhiều nhất trong ngày",
                "Tên sách",
                "Số lượng",
                dataset,
                PlotOrientation.VERTICAL,
                true,
                true,
                false);

        // Create the chart panel
        chartPanel = new ChartPanel(chart);

        // Remove previous chart panel (if any)
        jPanel12.removeAll();

        // Add the new chart panel to jPanel12
        jPanel12.setLayout(new BorderLayout());
        jPanel12.add(chartPanel, BorderLayout.CENTER);
        jPanel12.validate();

        chartVisible = true; // Đặt trạng thái hiển thị biểu đồ là true
        btn_top3.setText("Ẩn biểu đồ"); // Đặt lại nội dung của nút btn_top3
        btn_top3.setPreferredSize(new Dimension(120, 30)); // Đặt lại kích thước của nút btn_top3
        jPanel12.setPreferredSize(new Dimension(150, 150)); // Đặt lại kích thước của jPanel12
    }
    }//GEN-LAST:event_btn_top3ActionPerformed

    private void btn_top330ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_top330ActionPerformed
        // TODO add your handling code here:
         if (chartVisible) { // Nếu biểu đồ đang hiển thị
        jPanel13.remove(chartPanel);
        jPanel13.revalidate();
        jPanel13.repaint();
        chartVisible = false; // Đặt trạng thái hiển thị biểu đồ là false
        btn_top330.setText("Hiển thị biểu đồ"); // Đặt lại nội dung của nút btn_top330
        btn_top330.setPreferredSize(new Dimension(120, 30)); // Đặt lại kích thước của nút btn_top330
        jPanel13.setPreferredSize(new Dimension(150, 150)); // Đặt lại kích thước của jPanel12
    } else { // Nếu biểu đồ không được hiển thị
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        // Connect to the database
        String url = "jdbc:mysql://localhost:3306/qltvap";
        String username = "root";
        String password = "";
        try (Connection connection = DriverManager.getConnection(url, username, password)) {
            // Get the current date
            LocalDate currentDate = LocalDate.now();

            // Calculate the start date (30 days ago)
            LocalDate startDate = currentDate.minusDays(30);

            // Execute the query to get the top 3 most borrowed books in the last 30 days
            String sql = "SELECT p.id_sach, COUNT(*) AS count, s.tensach FROM phieumuon p JOIN sach s ON p.id_sach = s.id WHERE p.ngaymuon BETWEEN ? AND ? GROUP BY p.id_sach, s.tensach ORDER BY count DESC LIMIT 3";
            try (PreparedStatement statement = connection.prepareStatement(sql)) {
                statement.setString(1, startDate.toString());
                statement.setString(2, currentDate.toString());
                try (ResultSet resultSet = statement.executeQuery()) {
                    while (resultSet.next()) {
                        String idSach = resultSet.getString("id_sach");
                        int count = resultSet.getInt("count");
                        String tenSach = resultSet.getString("tensach");
                        dataset.addValue(count, "Số lượng", tenSach);
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        // Create the chart
        JFreeChart chart = ChartFactory.createBarChart(
                "Top 3 sách được mượn nhiều nhất trong 30 ngày",
                "Tên sách",
                "Số lượng",
                dataset,
                PlotOrientation.VERTICAL,
                true,
                true,
                false);

        // Create the chart panel
        chartPanel = new ChartPanel(chart);

        // Remove previous chart panel (if any)
        jPanel13.removeAll();

        // Add the new chart panel to jPanel12
        jPanel13.setLayout(new BorderLayout());
        jPanel13.add(chartPanel, BorderLayout.CENTER);
        jPanel13.validate();

        chartVisible = true; // Đặt trạng thái hiển thị biểu đồ là true
        btn_top330.setText("Ẩn biểu đồ"); // Đặt lại nội dung của nút btn_top330
        btn_top330.setPreferredSize(new Dimension(120, 30)); // Đặt lại kích thước của nút btn_top330
        jPanel13.setPreferredSize(new Dimension(150, 150)); // Đặt lại kích thước của jPanel12
    }
    }//GEN-LAST:event_btn_top330ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(quanlithuvienap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(quanlithuvienap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(quanlithuvienap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(quanlithuvienap.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new quanlithuvienap().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuy1;
    private javax.swing.JButton btnHuy4;
    private javax.swing.JButton btnLuu1;
    private javax.swing.JButton btnLuu4;
    private javax.swing.JButton btnSua1;
    private javax.swing.JButton btnSua4;
    private javax.swing.JButton btnThem1;
    private javax.swing.JButton btnThem4;
    private javax.swing.JButton btnTim1;
    private javax.swing.JButton btnTrasach;
    private javax.swing.JButton btnXoa1;
    private javax.swing.JButton btnXoa4;
    private javax.swing.JButton btn_sachcontrongkho;
    private javax.swing.JButton btn_sachduocmuontrongthang;
    private javax.swing.JButton btn_sachmuontrongngay;
    private javax.swing.JButton btn_tilequahan;
    private javax.swing.JButton btn_top3;
    private javax.swing.JButton btn_top330;
    private javax.swing.JButton btnluu3;
    private javax.swing.JButton btnsua3;
    private javax.swing.JButton btnthem3;
    private javax.swing.JButton btntim2;
    private javax.swing.JButton btntim3;
    private javax.swing.JButton btnxoa3;
    private javax.swing.JTable hienthi;
    private javax.swing.JTable hienthi2;
    private javax.swing.JTable hienthi3;
    private javax.swing.JTabbedPane hienthibandoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField txtDiachi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMsm;
    private javax.swing.JTextField txtMsv;
    private javax.swing.JTextField txtMsvm;
    private javax.swing.JTextField txtSdt;
    private javax.swing.JTextField txtSoluong;
    private javax.swing.JTextField txtTacgia;
    private javax.swing.JTextField txtTensach;
    private javax.swing.JTextField txtTensv;
    private javax.swing.JTextField txtTheloai;
    // End of variables declaration//GEN-END:variables
}
